<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 29 Jul 2025 15:32:06 GMT</lastBuildDate>
    <item>
      <title>我构建了SQL-GPT  - 粘贴模式，用英语询问，获取SQL查询</title>
      <link>https://www.reddit.com/r/programming/comments/1mcekep/i_built_sqlgpt_paste_your_schema_ask_in_english/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我一直在研究[sql-gpt]（ （例如“收入划分的前10位客户”），并且它立即返回SQL查询。 💡为什么我为开发人员构建了它： 作为开发人员，我经常必须使用不熟悉的或大型方案，而从scratch上编写查询的询问是重复的。我构建了SQL-GPT使其更容易 - 它使用OpenAi的API在幕后的API，以及一些及时的调整以与您粘贴的架构保持一致。   ✅与PostgreSQL，MySQL等一起使用。        &lt;无需登录          - 边缘案例它不能很好地处理   - 安全/滥用问题   - 您是否信任/在生产中或仅用于原型型 这是链接： https://sql-gpt-olive.vercel.app    谢谢！提交由＆＃32; /u/u/clickbig5007      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcekep/i_built_sqlgpt_paste_your_schema_ask_in_english/</guid>
      <pubDate>Tue, 29 Jul 2025 15:31:32 GMT</pubDate>
    </item>
    <item>
      <title>Linux性能分析在60秒内</title>
      <link>https://www.reddit.com/r/programming/comments/1mcdr48/linux_performance_analysis_in_60_seconds/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/breweddoritos     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcdr48/linux_performance_analysis_in_60_seconds/</guid>
      <pubDate>Tue, 29 Jul 2025 15:00:32 GMT</pubDate>
    </item>
    <item>
      <title>第38天：如何像Pro一样监视Node.js应用中的内存使用量</title>
      <link>https://www.reddit.com/r/programming/comments/1mcd9mu/day_38_how_to_monitor_memory_usage_in_your_nodejs/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mcd9mu/day_38_how_to_to_to_monitor_monitor_memory_memory_usage_in_your_nodejs/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcd9mu/day_38_how_to_monitor_memory_usage_in_your_nodejs/</guid>
      <pubDate>Tue, 29 Jul 2025 14:41:51 GMT</pubDate>
    </item>
    <item>
      <title>不带AST的解析并使用节点海洋进行优化-Sam H. Smith -BSC 2025</title>
      <link>https://www.reddit.com/r/programming/comments/1mcd1e1/parsing_without_asts_and_optimizing_with_sea_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/levodelellis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcd1e1/parsing_without_asts_and_optimizing_with_sea_of/</guid>
      <pubDate>Tue, 29 Jul 2025 14:32:44 GMT</pubDate>
    </item>
    <item>
      <title>我分析了2025年搬迁的1,500多个技术工作</title>
      <link>https://www.reddit.com/r/programming/comments/1mcc9li/i_analyzed_1500_tech_jobs_with_relocation_in_2025/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/andrewstetsenko     &lt;a href =“ https://www.reddit.com/r/programming/comments/1mcc9li/i_analyzed_1500_tech_jobs_jobs_with_relocation_in_iin_2025/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcc9li/i_analyzed_1500_tech_jobs_with_relocation_in_2025/</guid>
      <pubDate>Tue, 29 Jul 2025 14:02:12 GMT</pubDate>
    </item>
    <item>
      <title>哪些开发人员在开源（2025年中期）中真正观看的是什么</title>
      <link>https://www.reddit.com/r/programming/comments/1mcb99c/what_developers_are_really_watching_in_open/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们分析了 faun.dev 读者确定开发人员的工具和趋势的数千个交互。您进行的每次点击都是对热点和开源世界中没有的投票。 如果您很好奇什么是在开发工作流中引起浪潮或想发现下一个大事，那么此列表值得扫描！  &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/eon01       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcb99c/what_developers_are_really_watching_in_open/</guid>
      <pubDate>Tue, 29 Jul 2025 13:20:02 GMT</pubDate>
    </item>
    <item>
      <title>GO的赛车探测器有一个静置的盲点</title>
      <link>https://www.reddit.com/r/programming/comments/1mcaujp/gos_race_detector_has_a_mutex_blind_spot/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/codebrad      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcaujp/gos_race_detector_has_a_mutex_blind_spot/</guid>
      <pubDate>Tue, 29 Jul 2025 13:02:33 GMT</pubDate>
    </item>
    <item>
      <title>访谈：Stack Overflow的产品创新负责</title>
      <link>https://www.reddit.com/r/programming/comments/1mcamog/interview_stack_overflows_head_of_product/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  “如果我不知道这个问题，我不会从事这项工作。”   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/scarey102      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcamog/interview_stack_overflows_head_of_product/</guid>
      <pubDate>Tue, 29 Jul 2025 12:53:01 GMT</pubDate>
    </item>
    <item>
      <title>处理陷阱redux中的多个断点</title>
      <link>https://www.reddit.com/r/programming/comments/1mcajfb/handling_multiple_breakpoints_in_trap_redux/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/josephkain      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mcajfb/handling_multiple_breakpoints_in_trap_redux/</guid>
      <pubDate>Tue, 29 Jul 2025 12:48:59 GMT</pubDate>
    </item>
    <item>
      <title>强大的评论技巧现在对高级开发人员而言更重要，因为AI编写了如此多的代码？</title>
      <link>https://www.reddit.com/r/programming/comments/1mc9cmi/do_strong_review_skills_matter_more_now_for/</link>
      <description><![CDATA[For those who are spending more time checking code than writing it, especially with all the AI-generated stuff showing up in PRs, how much do you think strong review skills actually count at the senior level? Has getting good at spotting odd issues in model-written code ever helped you get noticed for better roles, or is it just an expected part of the job now? If you’ve had to review both human and AI code, did you need to change up your process or mindset? Curious if anyone’s seen their review work (with LLM code) mentioned in interviews, promotions, or when recruiters come calling. Would love to hear real takes, if being known for solid code reviews (including AI-generated PRs) ever actually moved the needle career-wise.  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/turing_com      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc9cmi/do_strong_review_skills_matter_more_now_for/</guid>
      <pubDate>Tue, 29 Jul 2025 11:52:59 GMT</pubDate>
    </item>
    <item>
      <title>亚马逊S3如何实现强大的一致性而不牺牲99.99％的可用性</title>
      <link>https://www.reddit.com/r/programming/comments/1mc90dh/how_amazon_s3_achieves_strong_consistency_without/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/sdxyz42      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc90dh/how_amazon_s3_achieves_strong_consistency_without/</guid>
      <pubDate>Tue, 29 Jul 2025 11:35:14 GMT</pubDate>
    </item>
    <item>
      <title>哪种解析方法？</title>
      <link>https://www.reddit.com/r/programming/comments/1mc8u4w/which_parsing_approach/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/breweddoritos      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc8u4w/which_parsing_approach/</guid>
      <pubDate>Tue, 29 Jul 2025 11:25:43 GMT</pubDate>
    </item>
    <item>
      <title>MCP Auth的最终指南：身份，同意和代理安全性</title>
      <link>https://www.reddit.com/r/programming/comments/1mc86qk/the_ultimate_guide_to_mcp_auth_identity_consent/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pers_io      link link link&gt; link&gt; [link&gt; [link]&gt; [&gt;]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc86qk/the_ultimate_guide_to_mcp_auth_identity_consent/</guid>
      <pubDate>Tue, 29 Jul 2025 10:49:25 GMT</pubDate>
    </item>
    <item>
      <title>有什么方法可以清理此Python代码？</title>
      <link>https://www.reddit.com/r/programming/comments/1mc8273/any_way_to_clean_up_this_python_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ok-most-2770      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc8273/any_way_to_clean_up_this_python_code/</guid>
      <pubDate>Tue, 29 Jul 2025 10:42:07 GMT</pubDate>
    </item>
    <item>
      <title>有谁知道哪种免费或付费的AI模型/API目前是图像到图像发型最佳转换的最佳？</title>
      <link>https://www.reddit.com/r/programming/comments/1mc80g8/does_anyone_know_which_free_or_paid_ai_modelapi/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在寻找可以拍摄真实照片并实际更改发型的东西 - 最好在不同样式，长度和颜色的支持下进行支持。只要结果良好并且可以访问API，免费或付费选项都是欢迎的。有任何建议或建议吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/top_method_3067       [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mc80g8/does_anyone_know_which_free_or_paid_ai_modelapi/</guid>
      <pubDate>Tue, 29 Jul 2025 10:39:15 GMT</pubDate>
    </item>
    </channel>
</rss>