<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：WebDev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>一个致力于所有网络开发事物的社区：前端和后端。有关更多与设计有关的问题，请尝试 /r /web_design。</description>
    <lastBuildDate>Sat, 16 Aug 2025 06:36:27 GMT</lastBuildDate>
    <item>
      <title>开发人员黑客使我的代码保持清洁（并且我的文档更新）</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrn3p7/the_developer_hack_that_keeps_my_code_clean_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 r/webDev ，我想分享一个工作流程的改进，这是我的编码和文档的游戏 - 换人的过程。我们工作的很大一部分是记录我们的代码，概述建筑决策以及交流技术规格。我曾经花了无数小时来输入详细的评论，设计文档和拉出请求描述，通常感觉就像是在减慢了我的开发流程。 我尝试了各种iDe扩展和文档工具，但瓶颈始终是我能够表达出复杂的技术概念或捕获编码的整体上下文的速度。我对通用语音到文本软件的最初尝试令人沮丧。他们在特定的编程语言，可变名称和技术讨论的细微差别语言中挣扎。我花了更多的时间来纠正错误，而不是实际提高效率。 然后我发现了Willowvoice。差异是深刻的。它以令人印象深刻的精度准确地转录代码片段，技术术语，甚至复杂的建筑决策。 This has allowed me to:  Document Code: As I&#39;m writing code, I can dictate comments, explaining the logic and purpose of different sections, ensuring my code is well-documented. Outline Design Documents: I can quickly speak through architectural designs, data models, and API specifications, making design documentation much更快。     草稿拉的请求描述：我可以构成详细的拉力请求描述，解释更改，测试步骤和潜在的影响，从而使代码审查更有效。                strong&gt;通过我的想法，我可以在我的想法上进行一些问题，而我的想法是我的想法。找到一个解决方案。   柳节的准确性和速度意味着我可以专注于编写清洁，有效的代码和解决复杂问题，而不是打字的机械行为。 My documentation is more thorough, my designs are clearer, and I&#39;m able to manage a higher volume of development tasks with greater ease. This tool has not only boosted my productivity but also significantly improved the quality of my code and collaboration with my team. What are your go-to tools or strategies for streamlining development and documentation? I&#39;m always eager to learn from fellow developers!  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/jellyfishTime3942     [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrn3p7/the_developer_hack_that_keeps_my_code_clean_and/</guid>
      <pubDate>Sat, 16 Aug 2025 06:33:39 GMT</pubDate>
    </item>
    <item>
      <title>有没有人去构建网络后端？</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrmxt2/has_anyone_used_go_for_building_web_backend/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想知道它是否是用于构建后端的合适语言。是否有人在Rails，Django上使用了Ruby等其他堆栈，但仍然更喜欢去后端？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/maleficent_mess6445      [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrmxt2/has_anyone_used_go_for_building_web_backend/</guid>
      <pubDate>Sat, 16 Aug 2025 06:25:16 GMT</pubDate>
    </item>
    <item>
      <title>在Web项目中平衡品牌与功能，您如何处理？</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrmsco/balancing_branding_with_functionality_in_web/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿！我在海洋设计等项目中注意到，在保持品牌稳定和确保网站感觉快速，易于访问和开发人员友好之间通常会有张力。您如何与Core Dev最佳实践相平衡品牌需求？有帮助的工作流或示例吗？   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/uptimal_option_9094       [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrmsco/balancing_branding_with_functionality_in_web/</guid>
      <pubDate>Sat, 16 Aug 2025 06:17:25 GMT</pubDate>
    </item>
    <item>
      <title>[星期六的炫耀]我使用浏览器中的ghostscript webAssembly扩展了更多功能，压缩，合并和拆分PDF文件</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrmf1u/showoff_saturday_i_have_extended_opensource/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;   local PDF工具是一个免费的开源Web应用程序，可让您直接在浏览器中压缩，合并和拆分PDF文件，而无需上传。由Ghostscript WebAssembly提供动力，所有处理都在本地进行，以最大程度地进行隐私。功能包括优质的预设，自定义幽灵命令，实时终端输出和进度跟踪。根据AGPL V3许可。尝试：[ https://krmanik.github.io/local-pdf-tools/]（vscode-file：//vscode-app/app/applecllications/visal%20studio20studio%20code.app/conpents/resources/resources/resources/resources/resources/resources/resources/resources/resource/resources/resource/resource/code/code/code/electron-browser/workbeant/workbench/workbench/workbench/pr）  https://krmanik.github.io/local-pdf-tools/    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/webdev/comments/1mrmf1u/showoff_saturday_i_have_have_extended_opensource/”&gt; [link]        [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrmf1u/showoff_saturday_i_have_extended_opensource/</guid>
      <pubDate>Sat, 16 Aug 2025 05:58:46 GMT</pubDate>
    </item>
    <item>
      <title>我做了一个很小的打字游戏（React） - 欢迎反馈！</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrm0bg/i_made_a_tiny_typing_game_react_feedback_welcome/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  嘿！我建立了一个名为Typing Rush的小游戏。  在引擎盖下  用react + vite  用于样式的尾灯CSS href =“ https://typingrush-gamma.vercel.app/”&gt; https://typingrush-gamma.vercel.app/     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ash_1913      &lt;a href =“ https://www.reddit.com/r/webdev/comments/1mrm0bg/i_made_a_a_tiny_tiny_tiny_typing_game_game_react_feedback_welcome/]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrm0bg/i_made_a_tiny_typing_game_react_feedback_welcome/</guid>
      <pubDate>Sat, 16 Aug 2025 05:37:03 GMT</pubDate>
    </item>
    <item>
      <title>[星期六炫耀]建立了一个自由职业者资料，该个人资料在30秒内说明了您的一切</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrlt7k/showoff_saturday_built_a_freelancer_profile_that/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  当客户第一次在线见到您时，他们对长篇小说没有耐心。 They decide in seconds whether you’re worth trusting. That’s why I designed a profile system built to tell your whole story and earn trust in under 30 seconds. Here’s what makes it work:  Clear headline that nails what you do: “I build fast, mobile-friendly sites for startups and solo founders” Visual proof from真实链接： github，YouTube，Behance。每个链接显示带有缩略图，标题和描述的清洁预览。易于扫描，立即可信。  快速，真实的推荐：简短的报价而不是文本墙。   简单的联系选项：电子邮件，whatsapp。     结果不像简历，更像是一个值得信赖的着陆页。一些自由职业者已经告诉我，它帮助他们赢得了无限解释的赢得线索。 查看它：  gotfreelancer.com    提交由＆＃32;态href =“ https://www.reddit.com/r/webdev/comments/1mrlt7k/showoff_saturday_built_built_a_freelancer_profile_that/”&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrlt7k/showoff_saturday_built_a_freelancer_profile_that/</guid>
      <pubDate>Sat, 16 Aug 2025 05:26:22 GMT</pubDate>
    </item>
    <item>
      <title>设计模式，最佳实践和React的重构技巧</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrldiy/design_patterns_best_practices_and_refactoring/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好，大家，我是一家金融科技公司的前端网络开发人员，我被分配单独处理一个项目，而代码库有点混乱，现在这个代码库是我可能很有可能独奏的，持续了2  -  3年。我的高年级告诉我，我可以做代码库必要的任何事情，以便我可以更好地维护它，现在我正在研究最佳实践，正确的设计模式和专门针对React Codebase的重构技巧，你们是否有任何技巧？并且请解决您的经验，也许是您正在从事的领域/领域（健康，金融科技，SaaS等）。 tia！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/i-1-p-p     [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrldiy/design_patterns_best_practices_and_refactoring/</guid>
      <pubDate>Sat, 16 Aug 2025 05:03:59 GMT</pubDate>
    </item>
    <item>
      <title>我在Next.js上为SEO制作了一个包裹，因为我厌倦了无聊的配置（两栖动物）</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrlapu/fiz_um_package_pra_seo_no_nextjs_porque_eu_tava/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  ，那里的人👋 我总是在Next.js上使用SEO击败我，尤其是使用App Router和 eneralness 。因此，我最终创建了一个称为  Amphibian-Seo  简化此部分的软件包。 Twitter, etc. No headache   works with SSR and also with static pages   You can configure title template, json-ld, extra tags and assets preload   Integrate directly into  generatemectate  without gambiarra   Quick Example:   Import { Metada} from &amp; quot;两栖seo;导出函数通用（）{methate（{title：{default：＆quot; my site＆quot＆quot＆quot&#39;template：＆quot title％|我的网站＆quot＆quot＆quot＆quote＆quords; }   我仍在搅拌它并向反馈开放。如果有人测试并找到错误或有一个功能的想法，请发送子弹🚀  npm： amphibian-seo“&gt; amphibian-seo    提交由＆＃32; /u/horror_amamphimian7516     “ https://www.reddit.com/r/webdev/comments/1mrlapu/fiz_um_package_pra_pra_seo_no_no_no_nextjs_porque_eu_tava/&gt; [links]  &lt;a href =“ https://www.reddit.com/r/webdev/comments/1mrlapu/fiz_um_um_package_pra_seo_no_no_no_nextjs_porque_eu_eu_tava/]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrlapu/fiz_um_package_pra_seo_no_nextjs_porque_eu_tava/</guid>
      <pubDate>Sat, 16 Aug 2025 05:00:07 GMT</pubDate>
    </item>
    <item>
      <title>将Cookie同意添加到我的网站的最简单方法？</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrkb6u/easiest_way_to_add_cookie_consent_to_my_site/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这是我使用html/css/js构建的站点，并托管在数字海洋上。添加cookie同意的最简单方法是什么，特别是使用Google Analytics（ 谢谢！  &lt;！&lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/webdev/comments/1mrkb6u/easiest_way_way_way_to_add_cookie_consent_consent_to_my_site/”&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrkb6u/easiest_way_to_add_cookie_consent_to_my_site/</guid>
      <pubDate>Sat, 16 Aug 2025 04:10:10 GMT</pubDate>
    </item>
    <item>
      <title>干净吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrk8vz/is_it_clean/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/u/pristine-elevator198        [注释]          ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrk8vz/is_it_clean/</guid>
      <pubDate>Sat, 16 Aug 2025 04:07:00 GMT</pubDate>
    </item>
    <item>
      <title>一直在尝试上传我的第一个网页以netlify，但它只是螺旋螺旋</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrjzvm/been_trying_to_upload_my_first_webpage_to_netlify/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  它说上传不刷新，但它持续了二十分钟。帮助？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/sweaty-art-8966      &lt;a href =“ https://www.reddit.com/r/webdev/comments/1mrjzvm/been_try_trying_trod_to_upload_my_my_first_webpage_to_to_to_netlify/]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrjzvm/been_trying_to_upload_my_first_webpage_to_netlify/</guid>
      <pubDate>Sat, 16 Aug 2025 03:55:15 GMT</pubDate>
    </item>
    <item>
      <title>意识到自己正在浪费时间杂耍选项卡和扩展程序后，我用150多个工具构建了一个Chrome Extension</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrj9ad/i_built_a_chrome_extension_with_150_tools_after/</link>
      <description><![CDATA[    Hey Folks, I wanted to share a little project I’ve been working on for the past few months — and what I learned building it. As a frontend dev, I found myself constantly switching between: multiple Chrome extensions, random online converters, SEO and performance Checkers， 和用于快速实验的开发工具。 它起作用，但它凌乱而慢。 Half the time I was just context-switching. So, instead of adding yet another extension, I decided to build one myself: Web SuperKit — a single Chrome extension that crams 150+ dev/design/SEO/productivity utilities into one interface.  web superkit  superkit  and messaging work together. Performance tradeoffs: making sure 150+ tools didn’t bloat memory. Security considerations: everything runs locally/offline, so no data collection — but that also meant I had to rethink how some features would work without servers. UX balance: how do you keep 150+ tools discoverable without overwhelming the user? （扰流板：搜索 +类别 +干净的UI）。 ⚡功能（一些亮点） 注入＆amp; edit HTML/CSS/JS directly on any page Page audits: SEO, OpenGraph, tech stack detection Full-page or element-specific screenshots Everyday utilities (JSON formatter, regex tester, converters, QR generator, fake data, etc.) 🎉 Small milestone Launched it a month ago, and without ads it’s now at 180+ users just from word-of-mouth. For me, the best part wasn’t the “user count” but the fact that I could take all the random problems I faced daily as a dev and solve them in one place. Curious if anyone else here has taken a “pain point” from your workflow and turned it into a tool/extension/app? Would love feedback on the构建，方法，甚至只是想到如何处理工具过载。 感谢您阅读  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mudasirbuilds      [link link]  &lt;a href =“ https://www.reddit.com/r/webdev/comments/1mrj9ad/i_built_a_a_chrome_extension_with_with_150_tools_after/]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrj9ad/i_built_a_chrome_extension_with_150_tools_after/</guid>
      <pubDate>Sat, 16 Aug 2025 03:19:48 GMT</pubDate>
    </item>
    <item>
      <title>启动企业级SaaS后端样板的最快方法！</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrhpif/fastest_way_to_launch_enterprise_grade_saas/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在研究这个node.js microservices模板，作为我所有SaaS存储库的基础，或者说实话，任何需要在大门中进行可扩展验证体系结构的项目...   github     铁路         backstory：backstory：backstory：，我是软件开发人员和apps of apps的软件开发人员。在这一点（6年）中，我的全面架构技巧变得相当不错。我不断开始新项目，并一遍又一遍地重建相同的Auth +微服务设置。厌倦了搜索子储备存储库，因此目的是建立一个企业生产质量的存储库，经过全面测试并准备扩展。   有什么不同：       完整的auth System（jwt + diskens pervial and perverifial，plassive reperifity to and to cla and cla！）编码时，AI实际上知道您正在构建什么。这是我给它的非常全面的指令集。 单独的微服务用于电子邮件处理和令牌清洁工作的作业（Redis使用TTL，但通过此信息清理了电子邮件验证和密码RESET令牌）   一键轻便的铁路部署。如此之快！   为什么我以这种方式构建它： AI集成对我来说是关键。 Most templates are just code dumps, but since it feels like Claude and Cursor are the best combos for rapid development, I figured it would be helpful... Nothing worse than your ai overloading or forgetting context! TLDR: Node.js Backend + Complete Auth + Microservice Architectures + Claude &amp;光标上下文文件 +铁路模板 让我知道你们的想法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/clinterz     [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrhpif/fastest_way_to_launch_enterprise_grade_saas/</guid>
      <pubDate>Sat, 16 Aug 2025 02:08:31 GMT</pubDate>
    </item>
    <item>
      <title>使用NUXT 3和Django Rest框架建立了日常学习平台</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrf87g/built_a_daily_learning_platform_with_nuxt_3_and/</link>
      <description><![CDATA[       我想填写我在学校错过的所有常识。科学，哲学，政治，数学，您就为其命名。   tanstack查询 http请求/cache      django    rest框架 rest api api       supabase  for Auth + postgres database&gt;组件/样式   Vercel 和铁路       主要特征：    从各种主题中选择提示 所有这些都是为快速，每天的微学习  肯定裸露的骨骼，但我会喜欢一些反馈！  /u/u/j0pine32       [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrf87g/built_a_daily_learning_platform_with_nuxt_3_and/</guid>
      <pubDate>Sat, 16 Aug 2025 00:17:58 GMT</pubDate>
    </item>
    <item>
      <title>本地提取替换替换，通过超时，重试，重试策略，断路器和生命周期钩</title>
      <link>https://www.reddit.com/r/webdev/comments/1mrf0pk/native_fetch_replacement_with_timeout_retries/</link>
      <description><![CDATA[        &lt;！ -  sc_off- sc_off-&gt;  在每个js/ts项目中，无论是前端还是后端，您通常都必须获取一些数据。 And when you go into production, you realise you need something more resilient than the native fetch. There are some libraries on npm, but I found them either too dumb or doing too much, so I built my own. - Timeouts - per-request or global - Retries - user-defined, defaults to exponential back-off + jitter - Circuit breaker - trip after N failures - Hooks - logging, auth, metrics, request/response transformation - Per-request overrides - customize behavior on a per-request basis - Universal - Node, Browser, Cloudflare Workers, React Native - Zero runtime deps - ships as dual ESM/CJS - Written在TypeScript  欢迎任何反馈中，这里或在GitHub repo中。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/u/seledwisepush6424        [注释]            ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1mrf0pk/native_fetch_replacement_with_timeout_retries/</guid>
      <pubDate>Sat, 16 Aug 2025 00:08:52 GMT</pubDate>
    </item>
    </channel>
</rss>