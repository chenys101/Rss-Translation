<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：WebDev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>一个致力于所有网络开发事物的社区：前端和后端。有关更多与设计有关的问题，请尝试 /r /web_design。</description>
    <lastBuildDate>Fri, 04 Jul 2025 06:38:02 GMT</lastBuildDate>
    <item>
      <title>我对我所做的事情有些迷失。</title>
      <link>https://www.reddit.com/r/webdev/comments/1lrbmne/feeling_a_little_bit_lost_with_what_im_doing/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我想对我的英语说不起，而不是我的母语，我从未被教过，只是一个人，我自己和最好的朋友和女友的帮助。  我想成为一名网络开发人员，首先想到前端，然后如果我拥有所需的东西（那是大脑），请尝试成为一个全扇区。我今年28岁，上大学，在那里我们被教授了有关编程语言和一些游戏开发人员，例如3DS Max，Unity。当时我们使用的一些语言是Pascal，C/C ++，C＃。我们还在WordPress中进行了HTML和CSS，以及一些PHP和MySQL/Access。由于个人原因，我没有遵循编程路径，不是因为我不想这样做，而是因为生活很艰难，我在9个月内找到了实习生，我在固定软件和硬件，您可以将其命名，笔记本电脑，电话，屏幕，塔楼，任何东西。完成实习生后，我没有遵循它，而是从事其他与我想做的事情完全无关的工作。今天如此快进，我一直在尝试学习一年的网站，由于我在工作，并且我也试图做其他事情，因此并非每天保持一致性。我正在使用JavaScript进行HTML/CSS，我也看到了一些有关Bootstrap和tailwind的信息。 I&#39;ve been doing various projects, most of them are static pages, and they dont have any cool functionality besides showing something, I&#39;ve also made a portfolio I spended a lot of time on that, still working on it, making it responsive so it looks nice on phones too, having about page and projects page where I put everything there, I&#39;ve done a calculator with JS nothing crazy really, I&#39;ve been doing some Udemy courses about javascript and fullstack development. I recently started to working with trying to make my projects more modern, like importing and exporting JS files, working on how to display objects on DOM with JS, using localStorage to save information. Another thing I started doing is working with Node.js + Express, learning about requests and responses such as GET, POST, PUT, DELETE, how the client talks with the server, how JSON helps both the server and JS to translate the objects and texts to be彼此可读，状态代码和API，就像我正在做的最新项目一样，可以抓住一些对象，这些对象使用与异步/等待的fetch一起在浏览器上显示它们。 ，听起来都不错，但诚实地接近了我在前端任何地方的工作。我还参加了哈佛大学拥有的CS50计算机科学课程，我确实在努力学习所有我能够学习的一切，但是即使我学习，也很慢，但是我试图学习。我感到迷失了，我正在使用chatgpt来帮助我提供东西，例如不发布解决方案，例如解释我的方法，或者尝试以不给我解决方案的方式调试代码，因为我不需要解决方案，我需要理解和学习方法的核心。但是，即使我在做这些事情，我也感到……迷路了....最重要的是我没有削减？我觉得我正在运行和跑步，但这还不够，我试图尽可能多地学习，就像确定语法不会停留一样，有时我什至无法编写一个简单的循环来浏览一系列对象或使EventListener的工作，但是我试图学习。  我的问题是我不知道我要去哪里，我不知道我在做什么是好事，还是对我不知道我应该专注于什么，我应该停止做什么或做更多的工作。有时我无法使我的代码工作，也不能像我想要的方式中心，并且我觉得我很愚蠢，该编程对我来说并不是因为我太愚蠢了，甚至不理解最简单的事情，我坐在PC上写代码，而我不知道从js或我做的大多数时间，我仍然需要搜索语法和结构化的方式。  我想我今天写这篇长帖子的原因是因为这是一个寻求帮助的呼声。因为我什么都不知道...我不知道我要去哪里学习，并最终在现场工作。  我对这篇文章，英语，语法的结构以及帖子的结构感到非常抱歉。 大家都有美好的一天！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/adramellek     [link]      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lrbmne/feeling_a_little_bit_lost_with_what_im_doing/</guid>
      <pubDate>Fri, 04 Jul 2025 06:18:44 GMT</pubDate>
    </item>
    <item>
      <title>我参加了一些UI。</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr6y5l/some_ui_i_did_for_staged/</link>
      <description><![CDATA[        &lt;！ -  sc_off-&gt;   这是用于trystaged 。 com，com，comm com，我正在构建的客户门户网站工具。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/classic-musician-545     [link]   ＆＃32;   [注释]    ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr6y5l/some_ui_i_did_for_staged/</guid>
      <pubDate>Fri, 04 Jul 2025 01:54:40 GMT</pubDate>
    </item>
    <item>
      <title>关于Next.js的想法</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr4bjh/thoughts_about_nextjs_for_backend/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  只需阅读一篇文章，介绍了如何使用next.js来后端。我启动了一个具有完整堆栈NextJ的Web应用程序。有多糟糕？我已经处于15K线路。有单独的后端值得重构吗？在这种情况下，您建议这样做什么？谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/zr07     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr4bjh/thoughts_about_nextjs_for_backend/</guid>
      <pubDate>Thu, 03 Jul 2025 23:40:14 GMT</pubDate>
    </item>
    <item>
      <title>BLAZE安装：NPM v1.10.10的更快，更可靠的替代品</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr3y6e/blazeinstall_a_faster_more_reliable_alternative/</link>
      <description><![CDATA[       &lt;！&lt;！ -  sc_off-&gt;     blaze-install：更快，更快，更可靠的npm 嘿 r/javascript ！ I’m back with an update on my package manager project, blaze-install. (This is my second post—my old GitHub account was closed for no reason, so I had to set up a new one. Sorry for any confusion!) Key features  Fast installs with parallel downloads and global caching Consistent lockfiles across all platforms Monorepo/workspace support with proper dependency resolution Built-in security auditing and auto-fix for vulnerabilities Self-healing diagnostics (blaze doctor --fix) to auto-repair common issues Plugin system for extensibility (hooks for all major commands) Works with React本地，剧作家和其他复杂的设置 离线模式和预取完全本地安装 与进度棒和彩色输出的交互式CLI  依赖性依赖性 依赖图形可视化（ blaze blaze Graph ）   .blazerc 和 .npmrc 配置支持  最新版本亮点   插件系统：轻松在所有主要命令的挂钩之前/之后与Blaze-install一起扩展。包括！自动安装提示 带有 blaze图形的视觉依赖图   交互式依赖的交互式升级 甚至更快地使用并行的网络请求安装安装速度，并在spec    spec中构建了  spec exceciqu    调试工作空间问题，我想要一个只有工作且易于扩展的包装管理器。 当前状态  有效的核心功能 测试套件通过（14/14 tests） 插件与示例插件一起使用         您与当前的包装经理面对什么痛点？    github： ＆＃32;提交由＆＃32; /u/u/uther_competition_56     [link]        [注释] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr3y6e/blazeinstall_a_faster_more_reliable_alternative/</guid>
      <pubDate>Thu, 03 Jul 2025 23:22:38 GMT</pubDate>
    </item>
    <item>
      <title>BLAZE安装：NPM v1.10.10的更快，更可靠的替代品</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr3xzr/blazeinstall_a_faster_more_reliable_alternative/</link>
      <description><![CDATA[       &lt;！&lt;！ -  sc_off-&gt;     blaze-install：更快，更快，更可靠的npm 嘿 r/javascript ！ I’m back with an update on my package manager project, blaze-install. (This is my second post—my old GitHub account was closed for no reason, so I had to set up a new one. Sorry for any confusion!) Key features  Fast installs with parallel downloads and global caching Consistent lockfiles across all platforms Monorepo/workspace support with proper dependency resolution Built-in security auditing and auto-fix for vulnerabilities Self-healing diagnostics (blaze doctor --fix) to auto-repair common issues Plugin system for extensibility (hooks for all major commands) Works with React本地，剧作家和其他复杂的设置 离线模式和预取完全本地安装 与进度棒和彩色输出的交互式CLI  依赖性依赖性 依赖图形可视化（ blaze blaze Graph ）   .blazerc 和 .npmrc 配置支持  最新版本亮点   插件系统：轻松在所有主要命令的挂钩之前/之后与Blaze-install一起扩展。包括！自动安装提示 带有 blaze图形的视觉依赖图   交互式依赖的交互式升级 甚至更快地使用并行的网络请求安装安装速度，并在spec    spec中构建了  spec exceciqu    调试工作空间问题，我想要一个只有工作且易于扩展的包装管理器。 当前状态  有效的核心功能 测试套件通过（14/14 tests） 插件与示例插件一起使用         您在当前的包装管理人员时面对哪些疼痛点？    github：  https://github.com/nom-nom-hub/blaze-cli 提交由＆＃32; /u/u/uther_competition_56     [link]       [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr3xzr/blazeinstall_a_faster_more_reliable_alternative/</guid>
      <pubDate>Thu, 03 Jul 2025 23:22:23 GMT</pubDate>
    </item>
    <item>
      <title>寻找有关SVG优化的诚实反馈 - 此功能适合您吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr2gx3/looking_for_honest_feedback_on_svg_optimization/</link>
      <description><![CDATA[Hey folks, I recently added SVG optimization to a small browser-based tool I’ve been building, and I’d love to get some real feedback on how well it works. The goal was to make a quick, no-install workflow for converting SVGs to JSX, Base64, or CSS, but now it also tries to optimize SVG使用幕后SVGO。我已经用几个样品进行了测试，但是我很奇怪它如何处理您的真实世界SVG。 如果您有30秒的svg落入svg并查看它是如何进行的，我真的很感激：👉也向想法开放，任何令人困惑，烦人或只是缺少的东西？让我知道。这仍然是一个附带项目，但我想让它对于经常处理SVG的开发人员确实有用。 事先感谢，丹尼尔  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/webdev/comments/1lr2gx3/looking_for_for_honest_feedback_on_svg_optimization/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr2gx3/looking_for_honest_feedback_on_svg_optimization/</guid>
      <pubDate>Thu, 03 Jul 2025 22:14:38 GMT</pubDate>
    </item>
    <item>
      <title>前雇主将Next.js用作纯后端框架</title>
      <link>https://www.reddit.com/r/webdev/comments/1lr2csd/former_employer_used_nextjs_as_pure_backend/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我曾经在Angular Frontend上的此规模上担任前端工程师。经典水疗中心，运往网络和移动设备，并具有用打字稿编写的休息后端。当我问是否有可能变得更加交叉功能并在后端工作时，当他们告诉我他们在Next.js的整个后端都建造了整个后端时，我感到震惊。不，不是node.js，而不是nest.js，实际的next.js，如vercel react react frontend ssr框架。疯狂的事情是，他们甚至没有与下一个应用程序一起运行的退缩管理面板。更多的公司真的这样做吗？   fyi，我已经辞职了。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/udget-length2666     [link]        [commist]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lr2csd/former_employer_used_nextjs_as_pure_backend/</guid>
      <pubDate>Thu, 03 Jul 2025 22:09:23 GMT</pubDate>
    </item>
    <item>
      <title>抛光拖动到排序卡UI-评论中的源代码👇</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqz88o/polished_drag_to_sort_card_ui_source_code_in/</link>
      <description><![CDATA[    src =“ https://preview.redd.it/uv5d6t4444spaf1.png?width = 640＆amp； crop; crop = smart＆amp; amp; amp; auto = webppul UI-源代码在注释👇“/&gt;   ＆＃32;提交由＆＃32; /u/u/u/turbokit-io       [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqz88o/polished_drag_to_sort_card_ui_source_code_in/</guid>
      <pubDate>Thu, 03 Jul 2025 19:56:51 GMT</pubDate>
    </item>
    <item>
      <title>每天我不必为Internet Explorer建造都是祝福的</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqytsc/every_day_i_dont_have_to_build_for_internet/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我目前有一个问题，即在边缘上精选的菜单项很重，只有在边缘。 我从ie  的过去中得到了PTSD。 ＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/webdev/comments/1lqytsc/every_day_i_i_i_dont_have_to_build_build_for_internet/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqytsc/every_day_i_dont_have_to_build_for_internet/</guid>
      <pubDate>Thu, 03 Jul 2025 19:40:31 GMT</pubDate>
    </item>
    <item>
      <title>我该如何解决？我需要帮助</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqw0rm/how_do_i_fix_this_i_need_help/</link>
      <description><![CDATA[     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/folijoshua     link link&gt; [link link]   [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqw0rm/how_do_i_fix_this_i_need_help/</guid>
      <pubDate>Thu, 03 Jul 2025 17:48:08 GMT</pubDate>
    </item>
    <item>
      <title>使用一周的视图作为预订小部件是不好的做法吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqvgyq/is_it_bad_practice_to_use_a_week_view_for_a/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  我一直在寻找一个好的预订小部件，但似乎绝大多数人都会每月日历视图，或者至少是默认值。所以我想知道那是因为一周的视图被认为是不良习惯吗？ 无论如何，我并没有没有理由将其格式化 - 这是为房地产摄影网站而言，当房地产经纪人在这里获得新客户时，他们有5天的时间来获取列表，因此很少有过几天的预订。有一个完整的“月”日历看起来像是过分的。另外，房地产经纪人往往很忙，所以我认为有这样的日子和时间段这样的时间段这样的时间很快，很容易看到我们的日程安排如何重叠 - 与必须点击不同的日期并在每月观看的每个日期中查看不同的时间。 我的主要关注点我无法确定这种类型的熟悉的熟悉的日期，如果熟悉的情况下，人们会为人们付出of for Gateber for Gaterion for Most for Most of Edye，所以IDK是如此。如果我以这种方式进行格式化，我会做的，所以第一列是“今天”然后，每个后续的列是第二天，您只需水平滚动而不会折断一周或其他任何东西。 此类预订窗口的日历上的一般共识是什么？提交由＆＃32; /u/_depression101       [注释]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqvgyq/is_it_bad_practice_to_use_a_week_view_for_a/</guid>
      <pubDate>Thu, 03 Jul 2025 17:26:36 GMT</pubDate>
    </item>
    <item>
      <title>请帮助我决定我的网站的主题</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqv0yb/please_help_me_decide_the_theme_of_my_website/</link>
      <description><![CDATA[         &lt;正在建立一个网站抢回家。  https://something12314.myshopify.com/ 。密码为test123。它是一家多品牌商店，提供两种产品类别。电子和浴室配件。我尝试在它们之间创建一个区别。首页显示了一个无限移动的轮播，并由移动设备和台式机支持。我自己做了主页轮播。主题是Shrine Pro。我尚未完成所有页面，需要帮助决定主题颜色和结构，基本上该网站提供了您为家庭需求而获得的各种产品。我给了电子页面白色现代外观。和浴室页面深色的外观。我想问这个配色方案/设计/想法是否好。或有改进的领域。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/nocommittee4992       &lt;a href =“ https://www.reddit.com/r/webdev/comments/1lqv0yb/please_help_help_help_me_decide_the_the_the_thee_thee_theem_my_my_website/]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqv0yb/please_help_me_decide_the_theme_of_my_website/</guid>
      <pubDate>Thu, 03 Jul 2025 17:09:15 GMT</pubDate>
    </item>
    <item>
      <title>还有其他人厌倦了重新完成相同的指示来chatgpt吗？我建立了一些帮助。</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqu226/anyone_else_get_tired_of_retyping_the_same/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我觉得自己疯了，一遍又一遍地将同样的东西重新投入到聊天窗口中。诸如“校对此”之类的东西...或者“总结为5岁的…… 感觉就像是如此的时间，所以我最终为自己构建了一个简单的工具来自动化这些重复的任务。它基本上是一个视觉工作流构建器，您可以在其中连接节点（例如提示，AI型号等）来创建可重复使用的模板。   它们在浏览器中本地运行，因此数据和API键都与您同在。它也是开源的。 我正在分享它，因为我认为你们中的一些人可能会感到沮丧。我真的很好奇，知道这是否是其他人面临的问题，是否确实有用。 您可以在这里使用它： https://systemprompt.app.app.app.app.app                    ＆＃32;提交由＆＃32; /u/u/woody_cody     [link]        [commiss]   ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqu226/anyone_else_get_tired_of_retyping_the_same/</guid>
      <pubDate>Thu, 03 Jul 2025 16:31:00 GMT</pubDate>
    </item>
    <item>
      <title>这些天，您正在使用哪些API DOC工具？</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqtyfz/which_api_doc_tools_are_you_using_these_days/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经狩猎了很长时间，可以通过OpenAPI规格进行编辑和共享API文档，但是我仍然没有找到真正适合我的需求的工具。 ，所以我开始使用自己的“ vibe-debe”来构建自己的Openapi Viewer。这是一个Cli + Next.js查看器，还有一堆Claude-Code命令，因此我可以要求AI为我调整YAML。我打算尽快开放源。 让我想知道：在这个AI时代，哪些工具在Web-Dev项目中实际上很受欢迎？ 我使用了一段时间的stoplight，一段时间以来 -  nice Editor，不错的观众，但是自从AI-Assisted编辑以来，AI-Assissed Nothers nocy in ai aim in ai nima in ai nocy in ai a in ai a in ai a in ai a in ai shim in ai a in ai shim in ai a in ai phy your in aim phy your phs your phs y your p&gt; p&gt; p&gt;  项目？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sbt_not     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqtyfz/which_api_doc_tools_are_you_using_these_days/</guid>
      <pubDate>Thu, 03 Jul 2025 16:26:56 GMT</pubDate>
    </item>
    <item>
      <title>网站外包</title>
      <link>https://www.reddit.com/r/webdev/comments/1lqtqlg/website_outsource/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好，我想知道如何找到客户在大学时创建网站。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/headintroduction3256     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1lqtqlg/website_outsource/</guid>
      <pubDate>Thu, 03 Jul 2025 16:18:10 GMT</pubDate>
    </item>
    </channel>
</rss>